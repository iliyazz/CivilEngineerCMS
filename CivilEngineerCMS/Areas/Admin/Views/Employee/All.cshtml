@using CivilEngineerCMS.Services.Data.Interfaces
@model IEnumerable<CivilEngineerCMS.Web.ViewModels.Employee.AllEmployeeViewModel>
@inject IEmployeeService EmployeeService

@{
    ViewData["Title"] = "All employees";
    var employees = Model.ToList();
}

<h2 class="text-center">@ViewData["Title"]</h2>
<hr/>

@if (!employees.Any())
{
    <h3 class="text-center">No employee yet!</h3>
}
else
{
    <table class="table table-hover table-bordered">
        <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">First name</th>
            <th scope="col">Last name</th>
            <th scope="col">Job title</th>
            <th scope="col">Email</th>
            <th scope="col">Phone number</th>
            <th scope="col">Is deleted</th>

        </tr>
        </thead>
        <tbody>
        @{ int rowNumber = 0; }
        @foreach (var em in employees)
        {
            rowNumber++;
            var employeeCondition = string.Empty;
            employeeCondition = em.IsActive ? "Active" : "Deleted";
            <tr onclick="location.href = '@Url.Action("Details", "Employee", new { id = @em.Id , Area = ""})'" data - toggle="tooltip" data - placement="top" title="Click for details" role="button">
                <th scope="row">@rowNumber</th>
                <td>@em.FirstName</td>
                <td>@em.LastName</td>
                <td>@em.JobTitle</td>
                <td>@em.Email</td>
                <td>@em.PhoneNumber</td>
                <td>@employeeCondition</td>
            </tr>
        }
        </tbody>
    </table>
}