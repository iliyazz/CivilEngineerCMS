@using CivilEngineerCMS.Common
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model ProjectAllQueryModel
@{
    ViewBag.Title = "All Projects";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr/>


<form method="get">
    <div class="row">
        <div class="form-group col-md-3">
            <label asp-for="Status"></label>
            <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<ProjectStatusEnums>()">
                <option selected="selected" value="">Please select</option>
            </select>
            <span asp-validation-for="Status" class="small text-danger"></span>
        </div>

        <div class="form-group col-md-3 justify-content-between">
            <label asp-for="SearchString"></label>
            <input asp-for="SearchString" class="form-control" placeholder="...">
        </div>

        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="ProjectSorting"></label>
                <select asp-for="ProjectSorting" class="form-control">
                    <option value="0">Project Name</option>
                    <option value="1">Project Status</option>
                    <option value="2">Project Description</option>
                    <option value="3">Client Name</option>
                    <option value="4">Client Email</option>
                    <option value="5">Client Phone</option>
                    <option value="6">Manager Name</option>
                    <option value="7">Manager Email</option>
                    <option value="8">Manager Phone</option>
                    <option value="9">Not filtered</option>
                </select>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group mt-4">
                <input type="submit" value="Search" class="btn btn-primary"/>
            </div>
        </div>
    </div>
</form>
@{
    int previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }
    ViewBag.ProjectsPerPage = Model.ProjectsPerPage;
    int maxPage = (int)Math.Ceiling((double)Model.TotalProjects /
                                    Model.ProjectsPerPage);
}

<div class="row mb-5 p-3">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)" id="left_btn"
           asp-controller="Project"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-Status="@Model.Status"
           asp-route-SearchString="@Model.SearchString"
           asp-route-ProjectSorting="@((int)Model.ProjectSorting)">
            <<
        </a>
    </div>
    @{
        bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
                                        !Model.Projects.Any();
    }
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
@(shouldNextPageBeDisabled ? "disabled" : string.Empty)" id="right_btn"
           asp-controller="Project"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-Status="@Model.Status.ToString()"
           asp-route-SearchString="@Model.SearchString"
           asp-route-ProjectSorting="@((int)Model.ProjectSorting)">
            >>
        </a>
    </div>
</div>
@if (!Model.Projects.Any())
{
    <h2 class="text-center">No projects found by the given criteria!</h2>
}
else
{
    <div class="mb-5"></div>

    <section id="projectListStyle">
        <table class="table table-hover">
            <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Project title</th>
                <th scope="col">Client name</th>
                <th scope="col">Manager name</th>
                <th scope="col">Project create date</th>

            </tr>
            </thead>
            <tbody>
            @{
                int rowNumber = 0;
                int currentRowNumber = 0;
            }
            @foreach (var p in Model.Projects)
            {
                rowNumber++;
                currentRowNumber = (Model.CurrentPage - 1) * Model.ProjectsPerPage + rowNumber;
                <tr >

                    <th scope="row">@currentRowNumber</th>
                    <td>@p.ProjectName</td>
                    <td>@p.ClientName</td>
                    <td>@p.ManagerName</td>
                    <td>@p.ProjectCreatedDate</td>
                    <td>
                        <a class="btn btn-primary" asp-controller="Project" asp-action="Details" asp-route-id="@p.Id" method="post">Details</a>
                    </td>

                </tr>
            }
            </tbody>
        </table>
    </section>
}